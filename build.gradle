buildscript {
    ext {
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
        // jcenter 는 2022년 2월 11일 이후로 서비스 중단
//        jcenter()
    }
    dependencies {
        classpath(
                "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        )
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

//plugins {
//    id 'java'
//}

//group 'org.example'
//version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
//    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
//    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
//    testCompile('org.springframework.boot:spring-boot-starter-test')
//    compile('org.springframework.boot:spring-boot-starter-web')

//  gradle 7 이상 부터는 compile -> implementation, testCompile -> testImplementation
    implementation('org.springframework.boot:spring-boot-starter-web')
    testImplementation('org.springframework.boot:spring-boot-starter-test')

//  롬복 추가
//  implementation('org.projectlombok:lombok')
//  gradle 버전 5 이상에서는 아래와 같이 추가해줘야됨
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

//    Spring Data JPA 추가
//    스프링 부트용 Spring Data JPA 추상화 라이브러리로, 스프링 부트 버전에 맞춰 자동으로 JPA 관련 라이브러리들의 버전을 관리
    implementation('org.springframework.boot:spring-boot-starter-data-jpa')

//    인메모리 관계형 데이터베이스. 별도의 설치가 필요 없이 프로젝트 의존성만으로 관리할 수 있음. 메모리에서 실행되기 때문에 어플리케이션을 종료하면 초기화 됨. 주로 테스트 용도로 많이 사용.
    implementation('com.h2database:h2')

//    머스테치 스타터 의존성 추가 : 템플릿 엔진
    implementation('org.springframework.boot:spring-boot-starter-mustache')

//    스프링 시큐리티 관련 의존성 추가
//    소셜 로그인 등 클라이언트 입장에서 소셜 기능 구현 시 필요한 의존성이다.
//    spring-security-oauth2-client, spring-security-oauth2-jose 를 기본으로 관리해준다.
    implementation('org.springframework.boot:spring-boot-starter-oauth2-client')

//    spring-session-jdbc 의존성 추가
    implementation('org.springframework.session:spring-session-jdbc')

//    스프링 시큐리티 테스트를 위한 여러 도구를 지원하는 의존성 추가
    implementation('org.springframework.security:spring-security-test')

//    MariaDB 드라이버
    implementation('org.mariadb.jdbc:mariadb-java-client')

}

//test {
//    useJUnitPlatform()
//}